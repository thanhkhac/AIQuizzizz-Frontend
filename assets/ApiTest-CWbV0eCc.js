var n=Object.defineProperty;var c=(E,t,e)=>t in E?n(E,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):E[t]=e;var s=(E,t,e)=>c(E,typeof t!="symbol"?t+"":t,e);import{J as T}from"./index-BCAnCLfr.js";const u={ALL:"All",PASSED:"Passed",FAILED:"Failed"},a={GET_BY_ID:"Test/{testId}",CREATE:"Test",UPDATE:"Test/{testId}",DELETE:"Test/{testId}",ATTEMPT:"Test/{testId}/Attempt",SUBMIT:"Test/Submit",GET_ALL_RESULT_BY_LIMIT:"Test/{testId}/Class/Result",GET_USER_EXAM_HISTORY:"Test/{testId}/History",GET_ATTEMPT_REVIEW:"Test/{attemptId}/Review",GET_TEST_SCHEDULE:"Test/Schedule"};class l{constructor(){s(this,"GetById",async(t,e=!0)=>{const r=a.GET_BY_ID.replace("{testId}",t);return await T.get(r,{params:{isShowQuestion:e}})});s(this,"Create",async t=>await T.post(`${a.CREATE}`,t));s(this,"Update",async t=>{const e=a.UPDATE.replace("{testId}",t.testId);return await T.patch(e,t)});s(this,"Delete",async t=>{const e=a.DELETE.replace("{testId}",t);return await T.delete(e)});s(this,"Attempt",async t=>{const e=a.ATTEMPT.replace("{testId}",t);return await T.post(e)});s(this,"Submit",async t=>await T.post(`${a.SUBMIT}`,t));s(this,"GetAllExamResultByLimit",async(t,e)=>{const r=a.GET_ALL_RESULT_BY_LIMIT.replace("{testId}",t);return await T.get(r,{params:{pageNumber:e.pageNumber<=0?1:e.pageNumber,pageSize:Math.max(5,Math.min(e.pageSize||5,100)),studentName:e.studentName||"",isPassed:e.isPassed?e.isPassed===u.PASSED:null}})});s(this,"GetUserExamHistory",async(t,e="")=>{const r=a.GET_USER_EXAM_HISTORY.replace("{testId}",t);return await T.get(r,{params:{userId:e}})});s(this,"GetAttemptReview",async t=>{const e=a.GET_ATTEMPT_REVIEW.replace("{attemptId}",t);return await T.get(e)});s(this,"GetTestSchedule",async(t,e)=>await T.get(`${a.GET_TEST_SCHEDULE}`,{params:{month:t,year:e}}))}}const _=new l;export{_ as A,u as T};
