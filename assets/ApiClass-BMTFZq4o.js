import{H as a}from"./index-75kEPr5A.js";const t={CREATE:"Class",GET_ALL_BY_LIMIT:"Class",GET_ALL_EXAM_BY_LIMIT:"Class/{ClassId}/Tests",GET_ALL_STUDENT_BY_LIMIT:"Class/{ClassId}/Students",GET_ALL_QS_BY_LIMIT:"Class/{ClassId}/QuestionSets",GET_BY_ID:"Class/{ClassId}",CREATE_INVITATION:"Class/{ClassId}/Invitations",JOIN_CLASS:"Class/Students",DELETE_CLASS:"Class/{ClassId}",DELETE_CLASS_MEMBER:"Class/{ClassId}/Members/{UserId}",UPDATE_CLASS_MEMBER_POSITION:"Class/{ClassId}/Members/{UserId}",DELETE_CLASS_QUESTION_SET:"Class/{ClassId}/QuestionSets/{QuestionSetId}",GET_INVITATION_CODE:"Class/{ClassId}/Invitation-Code",GET_USER_PERMISSION:"Class/{ClassId}/Permissions",ADD_QUESTION_SET:"Class/{ClassId}/QuestionSets/{QuestionSetId}"};class n{async Create(e){return await a.post(`${t.CREATE}`,e)}async Update(e){const s=t.GET_BY_ID.replace("{ClassId}",e.classId);return await a.patch(s,e)}async JoinClass(e){return await a.post(`${t.JOIN_CLASS}`,e)}async GetAllByLimit(e){return await a.get(`${t.GET_ALL_BY_LIMIT}`,{params:{pageNumber:e.pageNumber<=0?1:e.pageNumber,pageSize:Math.max(12,Math.min(e.pageSize||12,100)),name:e.name||"",shareMode:e.shareMode||""}})}async GetById(e){const s=t.GET_BY_ID.replace("{ClassId}",e);return await a.get(s)}async GetAllExamByLimit(e,s){const l=t.GET_ALL_EXAM_BY_LIMIT.replace("{ClassId}",e);return await a.get(l,{params:{pageNumber:s.pageNumber<=0?1:s.pageNumber,pageSize:Math.max(5,Math.min(s.pageSize||5,100)),testName:s.testName||"",status:s.status||""}})}async GetAllQSByLimit(e,s){const l=t.GET_ALL_QS_BY_LIMIT.replace("{ClassId}",e);return await a.get(l,{params:{pageNumber:s.pageNumber<=0?1:s.pageNumber,pageSize:Math.max(5,Math.min(s.pageSize||5,100)),name:s.name||""}})}async GetAllStudentByLimit(e,s){const l=t.GET_ALL_STUDENT_BY_LIMIT.replace("{ClassId}",e);return await a.get(l,{params:{pageNumber:s.pageNumber<=0?1:s.pageNumber,pageSize:Math.max(10,Math.min(s.pageSize||10,100)),keyword:s.keyword||"",fieldName:s.fieldName||""}})}async Delete(e){const s=t.DELETE_CLASS.replace("{ClassId}",e);return await a.delete(s)}async DeleteClassMember(e,s){const l=t.DELETE_CLASS_MEMBER.replace("{ClassId}",e).replace("{UserId}",s);return await a.delete(l)}async UpdateClassMemberPosition(e,s,l){const I=t.UPDATE_CLASS_MEMBER_POSITION.replace("{ClassId}",e).replace("{UserId}",s);return await a.patch(I,{classId:e,userId:s,position:l})}async DeleteQuestionSetFromClass(e,s){const l=t.DELETE_CLASS_QUESTION_SET.replace("{ClassId}",e).replace("{QuestionSetId}",s);return await a.delete(l)}async GetInivationCode(e){const s=t.GET_INVITATION_CODE.replace("{ClassId}",e);return await a.get(s)}async CreateNewInvitation(e){const s=t.CREATE_INVITATION.replace("{ClassId}",e.classId);return await a.post(s,e)}async GetUserPermission(e){const s=t.GET_USER_PERMISSION.replace("{ClassId}",e);return await a.get(s)}async AddQuestionSet(e,s){const l=t.ADD_QUESTION_SET.replace("{ClassId}",e).replace("{QuestionSetId}",s);return await a.post(l)}}const _=new n;export{_ as A};
