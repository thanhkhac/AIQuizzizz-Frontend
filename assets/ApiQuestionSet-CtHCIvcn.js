var i=Object.defineProperty;var u=(s,e,t)=>e in s?i(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var n=(s,e,t)=>u(s,typeof e!="symbol"?e+"":e,t);import{N as r}from"./index-CaXCJ6tV.js";const o={CREATE:"QuestionSet",UPDATE:"QuestionSet/{questionSetId}",LEARN_QUESTIONS:"QuestionSet/{questionSetId}/LearnQuestions",LEARN_HISTORY:"QuestionSet/{questionSetId}/LearnHistory",DELETE_LEARN_HISTORY:"QuestionSet/{questionSetId}/LearnHistory"};class S{constructor(){n(this,"Create",async e=>await r.post(`${o.CREATE}`,e));n(this,"Update",async(e,t)=>{const a=o.UPDATE.replace("{questionSetId}",e);return await r.patch(a,t)});n(this,"LearnQuestions",async(e,t)=>{const a=o.LEARN_QUESTIONS.replace("{questionSetId}",e);return await r.get(a,{params:{questionCount:t}})});n(this,"LearnHistory",async(e,t)=>{const a=o.LEARN_HISTORY.replace("{questionSetId}",e);return await r.post(a,t)});n(this,"resetLearnHistory",async e=>{const t=o.DELETE_LEARN_HISTORY.replace("{questionSetId}",e);return await r.delete(t)})}}const I=new S;export{I as A};
