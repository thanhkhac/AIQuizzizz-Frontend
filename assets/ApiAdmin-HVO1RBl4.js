var A=Object.defineProperty;var E=(e,a,t)=>a in e?A(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t;var n=(e,a,t)=>E(e,typeof a!="symbol"?a+"":a,t);import{G as s}from"./index-BCUxjaAq.js";const r={GET_ALL_USERS:"/Users",BAN_USER:e=>`/Users/${e}/Ban`,ASSIGN_ROLE:e=>`/Users/${e}/Role`,GET_SUBSCRIPTION:e=>`/Plan/${e}`,DELETE_PLAN:e=>`/Plan/${e}`,CREATE_PLAN:"/Plan",UPDATE_PLAN:"/Plan",GET_ALL_PLAN:"/Plan"};class P{constructor(){n(this,"GetAllUser",async a=>await s.get(`${r.GET_ALL_USERS}`,{params:a}));n(this,"AssignRole",async(a,t)=>await s.patch(`${r.ASSIGN_ROLE(a)}`,{},{params:{role:t.role}}));n(this,"BanUser",async(a,t)=>await s.patch(`${r.BAN_USER(a)}`,t));n(this,"GetPlan",async a=>await s.get(`${r.GET_SUBSCRIPTION(a)}`));n(this,"DeletePlan",async a=>await s.delete(`${r.GET_SUBSCRIPTION(a)}`));n(this,"CreatePlan",async a=>await s.post(`${r.CREATE_PLAN}`,a));n(this,"UpdatePlan",async a=>await s.post(`${r.UPDATE_PLAN}`,a));n(this,"GetAllPlan",async a=>await s.get(`${r.GET_ALL_PLAN}`))}}const L=new P;export{L as A};
