var n=Object.defineProperty;var c=(E,t,e)=>t in E?n(E,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):E[t]=e;var s=(E,t,e)=>c(E,typeof t!="symbol"?t+"":t,e);import{H as a}from"./index-DQ5VBJ-w.js";const i={ALL:"All",PASSED:"Passed",FAILED:"Failed"},T={GET_BY_ID:"Test/{testId}",CREATE:"Test",UPDATE:"Test/{testId}",DELETE:"Test/{testId}",ATTEMPT:"Test/{testId}/Attempt",SUBMIT:"Test/Submit",GET_ALL_RESULT_BY_LIMIT:"Test/{testId}/Class/Result",GET_USER_EXAM_HISTORY:"Test/{testId}/History",GET_ATTEMPT_REVIEW:"Test/{attemptId}/Review",GET_TEST_SCHEDULE:"Test/Schedule"};class u{constructor(){s(this,"GetById",async(t,e=!0)=>{const r=T.GET_BY_ID.replace("{testId}",t);return await a.get(r,{params:{isShowQuestion:e}})});s(this,"Create",async t=>await a.post(`${T.CREATE}`,t));s(this,"Update",async t=>{const e=T.UPDATE.replace("{testId}",t.testId);return await a.patch(e,t)});s(this,"Delete",async t=>{const e=T.DELETE.replace("{testId}",t);return await a.delete(e)});s(this,"Attempt",async t=>{const e=T.ATTEMPT.replace("{testId}",t);return await a.post(e)});s(this,"Submit",async t=>await a.post(`${T.SUBMIT}`,t));s(this,"GetAllExamResultByLimit",async(t,e)=>{const r=T.GET_ALL_RESULT_BY_LIMIT.replace("{testId}",t);return await a.get(r,{params:{pageNumber:e.pageNumber<=0?1:e.pageNumber,pageSize:Math.max(5,Math.min(e.pageSize||5,100)),studentName:e.studentName||"",isPassed:e.isPassed?e.isPassed===i.PASSED:null}})});s(this,"GetUserExamHistory",async(t,e)=>{const r=T.GET_USER_EXAM_HISTORY.replace("{testId}",t);return e?await a.get(r,{params:{userId:e}}):await a.get(r)});s(this,"GetAttemptReview",async t=>{const e=T.GET_ATTEMPT_REVIEW.replace("{attemptId}",t);return await a.get(e)});s(this,"GetTestSchedule",async(t,e)=>await a.get(`${T.GET_TEST_SCHEDULE}`,{params:{month:t,year:e}}))}}const _=new u;export{_ as A,i as T};
