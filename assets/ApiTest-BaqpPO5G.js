var n=Object.defineProperty;var c=(a,t,e)=>t in a?n(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var s=(a,t,e)=>c(a,typeof t!="symbol"?t+"":t,e);import{G as T}from"./index-BTtyw8YW.js";const r={GET_BY_ID:"Test/{testId}",CREATE:"Test",UPDATE:"Test/{testId}",DELETE:"Test/{testId}",ATTEMPT:"Test/{testId}/Attempt",SUBMIT:"Test/Submit"};class E{constructor(){s(this,"GetById",async t=>{const e=r.GET_BY_ID.replace("{testId}",t);return await T.get(e)});s(this,"Create",async t=>await T.post(`${r.CREATE}`,t));s(this,"Update",async t=>{const e=r.UPDATE.replace("{testId}",t.testId);return await T.patch(e,t)});s(this,"Delete",async t=>{const e=r.DELETE.replace("{testId}",t);return await T.delete(e)});s(this,"Attempt",async t=>{const e=r.ATTEMPT.replace("{testId}",t);return await T.post(e)});s(this,"Submit",async t=>await T.post(`${r.SUBMIT}`,t))}}const d=new E;export{d as A};
